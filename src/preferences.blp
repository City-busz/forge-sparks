using Gtk 4.0;
using Adw 1;

template Gjs_PreferencesWindow : Adw.PreferencesWindow {
  default-width: 500;
  default-height: 500;
  search-enabled: false;
  can-navigate-back: true;

  Adw.PreferencesPage {

    Adw.PreferencesGroup {
      title: _("General");

      Adw.ExpanderRow background {
        title: _("Keep running on background");
        show-enable-switch: true;
        expanded: true;

        notify::enable-expansion => _onBackgroundChanged();

        Adw.ActionRow {
          title: _("Run on startup");

          Switch startup {
            valign: center;

            notify::active => _onStartupChanged();
          }
        }
      }
    }

    Adw.PreferencesGroup {
      title: _("Accounts");

      [header-suffix]
      Button {
        clicked => _onOpenAddAccount();

        styles ["flat"]

        Adw.ButtonContent {
          label: _("Add Accountâ€¦");
          icon-name: "list-add-symbolic";
        }
      }

      ListBox accountsList {
        styles ["content"]

      }
    }
  }
}

Box accountNew {
  orientation: vertical;

  Adw.HeaderBar {
    show-end-title-buttons: false;
    show-start-title-buttons: false;

    title-widget: Adw.WindowTitle {
      title: _("Add Account");
    };

    Button {
      icon-name: "go-previous-symbolic";

      clicked => _onBack();
    }

    [end]
    Button addAccountBtn {
        label: _("Add");
        sensitive: false;

        clicked => _onAddAccount();

        styles ["suggested-action"]
      }
  }

  Adw.PreferencesPage {

    Adw.PreferencesGroup {

      Adw.ComboRow forge {
        title: _("Forge");

        notify::selected => _onForgeChanged();
      }

      Adw.EntryRow instance {
        title: _("Instance URL");
        sensitive: false;

        notify::text => _onEntryChanged();
      }

      Adw.EntryRow accessToken {
        title: _("Access Token");

        notify::text => _onEntryChanged();
      }
    }
  }
}

Box accountEdit {
  orientation: vertical;

  Adw.HeaderBar {
    show-end-title-buttons: false;
    show-start-title-buttons: false;

    title-widget: Adw.WindowTitle accountEditTitle {
      title: _("Edit Account");
    };

    Button {
      icon-name: "go-previous-symbolic";

      clicked => _onBack();
    }

    [end]
    Button saveAccountBtn {
        label: _("Save");
        sensitive: false;

        clicked => _onUpdateAccount();

        styles ["suggested-action"]
      }
  }

  Adw.PreferencesPage {

    Adw.PreferencesGroup {

      Adw.EntryRow instanceEdit {
        title: _("Instance URL");
        visible: false;

        notify::text => _onEditEntryChanged();
      }

      Adw.EntryRow accessTokenEdit {
        title: _("Access Token");

        notify::text => _onEditEntryChanged();
      }
    }

    Adw.PreferencesGroup {
      Button removeAccount {
        label: _("Remove Account");

        styles ["destructive-action"]

        clicked => _onRemoveAccount();
      }
    }
  }
}
